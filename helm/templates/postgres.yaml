{{- if .Values.postgresql.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: {{ .Values.global.namespace }}
data:
  POSTGRES_DB: {{ .Values.postgresql.auth.database }}
  POSTGRES_USER: {{ .Values.postgresql.auth.username }}
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: {{ .Values.global.namespace }}
type: Opaque
stringData:
  POSTGRES_PASSWORD: {{ .Values.postgresql.auth.password }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgresql.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.postgresql.name }}
spec:
  ports:
    - port: {{ .Values.postgresql.service.port }}
      name: postgres
  clusterIP: None
  selector:
    app: {{ .Values.postgresql.name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresql.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  serviceName: {{ .Values.postgresql.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgresql.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresql.name }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          ports:
            - containerPort: {{ .Values.postgresql.service.port }}
              name: postgres
          envFrom:
            - configMapRef:
                name: postgres-config
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.postgresql.persistence.storageClass }}
        storageClassName: {{ .Values.postgresql.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size }}
  {{- end }}
{{- end }}
